 [build-system]
 requires = ["setuptools>=68", "wheel"]
 build-backend = "setuptools.build_meta"

 [project]
 name = "alphapulldown"
 dynamic = ["version"]
 description = "Pipeline allows massive screening using alphafold"
 readme = { file = "README.md", content-type = "text/markdown" }
 requires-python = ">=3.8"
 authors = [
   { name = "EMBL Hamburg", email = "alphapulldown@embl-hamburg.de" }
 ]
 urls = { Homepage = "https://github.com/KosinskiLab/AlphaPulldown" }
 classifiers = [
   "Programming Language :: Python :: 3",
   "License :: OSI Approved :: MIT License",
   "Operating System :: OS Independent",
 ]
 dependencies = [
   "absl-py>=0.13.0",
   "dm-haiku",
   "dm-tree>=0.1.6",
   "h5py>=3.1.0",
   "matplotlib>=3.3.3",
   "ml-collections>=0.1.0",
   "pandas>=1.5.3",
    "tensorflow-cpu>=2.16.1",
   "importlib-resources>=6.1.0",
   "importlib-metadata>=4.8.2,<5.0.0",
   "biopython>=1.82",
   "nbformat>=5.9.2",
   "py3Dmol==2.0.4",
   "pytest>=6.0",
   "parameterized",
   "ipython==8.16.1",
    "tqdm>=4.66.1",
    "appdirs>=1.4.4",
    "jupyterlab>=3.0",
    "ipywidgets",
    "ml-dtypes",
    "chex>=0.1.86",
    "immutabledict>=2.0.0",
    "modelcif",
 ]

 [project.optional-dependencies]
 dev = [
   "pytest>=6",
   "ipython",
   "jupyterlab",
   "ipywidgets",
 ]
 alphafold2 = [
   # AF2 uses JAX in this project; install JAX separately per your CUDA setup
   "openmm>=8.0",
   "pdbfixer>=1.9",
 ]
  alignment_tools = [
    # These tools are typically installed via conda, not PyPI.
    # Kept as an empty extra to document the group without attempting pip install.
  ]
 alphafold3 = [
   # AF3 stack (install in a separate env; versions mirror upstream)
   "dm-haiku==0.0.13",
   "dm-tree",
   "jax==0.4.34",
   "jax[cuda12]==0.4.34",
   "jax-triton==0.2.0",
   "triton==3.1.0",
   "jaxtyping==0.2.34",
   "numpy",
   "typeguard==2.13.3",
   "zstandard",
 ]
 alphalink2 = [
   # Install matching CUDA wheels as needed
   "torch",
   "torchvision",
 ]

 [project.scripts]
 create-individual-features = "alphapulldown.scripts.create_individual_features:main"
 run-structure-prediction = "alphapulldown.scripts.run_structure_prediction:main"
 run-multimer-jobs = "alphapulldown.scripts.run_multimer_jobs:main"
 run-alphafold = "alphafold.run_alphafold:main"

[tool.setuptools]
include-package-data = true
script-files = [
  "./alphapulldown/scripts/create_individual_features.py",
  "./alphapulldown/scripts/run_multimer_jobs.py",
  "./alphapulldown/analysis_pipeline/create_notebook.py",
  "./alphapulldown/analysis_pipeline/get_good_inter_pae.py",
  "./alphapulldown/scripts/rename_colab_search_a3m.py",
  "./alphapulldown/scripts/prepare_seq_names.py",
  "./alphapulldown/scripts/generate_crosslink_pickle.py",
  "./alphapulldown/scripts/convert_to_modelcif.py",
  "./alphapulldown/scripts/run_structure_prediction.py",
  "./alphapulldown/scripts/truncate_pickles.py",
  "./alphafold/run_alphafold.py",
]

 [tool.setuptools.dynamic]
 version = { attr = "alphapulldown.__version__" }

[tool.setuptools.packages.find]
# Explicit packages to mirror setup.cfg
include = [
   "alphapulldown",
   "alphapulldown.utils",
   "alphapulldown.folding_backend",
   "alphapulldown.analysis_pipeline",
   "alphapulldown.scripts",
   "alphafold",
   "alphafold.data",
   "alphafold.data.tools",
   "alphafold.common",
   "alphafold.relax",
   "alphafold.model",
   "alphafold.model.geometry",
   "alphafold.model.tf",
   "alphafold.notebooks",
   "alphafold3",
   "alphafold3.structure",
   "colabfold",
   "analysis_pipeline",
   "af2plots",
   "unifold",
   "unifold.data",
   "unifold.modules",
   "unifold.msa",
   "unifold.losses",
   "unifold.symmetry",
 ]
where = ["."]

 [tool.setuptools.package-dir]
 alphapulldown = "./alphapulldown"
 "alphapulldown.folding_backend" = "./alphapulldown/folding_backend"
 alphafold = "./alphafold/alphafold"
 alphafold3 = "./alphafold3/src/alphafold3"
 "alphafold3.structure" = "./alphafold3/src/alphafold3/structure"
 colabfold = "./ColabFold/colabfold"
 analysis_pipeline = "./alphapulldown/analysis_pipeline"
 af2plots = "./alphapulldown/analysis_pipeline/af2plots/af2plots"
 unifold = "./AlphaLink2/unifold/"

[tool.setuptools.package-data]
"alphafold.common" = ["stereo_chemical_props.txt"]

 

