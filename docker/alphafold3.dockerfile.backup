FROM nvidia/cuda:12.6.0-base-ubuntu22.04

# ---------------------------------------------------------
# 1) System Packages
# ---------------------------------------------------------
RUN rm -rf /var/lib/apt/lists/* && apt-get clean && \
    apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends \
      software-properties-common \
      git \
      wget \
      gcc-12 \
      g++-12 \
      gfortran \
      make \
      zlib1g-dev \
      zstd \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100 \
    && rm -rf /var/lib/apt/lists/*

# ---------------------------------------------------------
# 2) Miniforge Installation (Conda at /opt/conda)
# ---------------------------------------------------------
RUN wget -q -P /tmp https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh \
    && bash /tmp/Miniforge3-Linux-x86_64.sh -b -p /opt/conda \
    && rm /tmp/Miniforge3-Linux-x86_64.sh

ENV PATH="/opt/conda/bin:$PATH"
ENV LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

# ---------------------------------------------------------
# 3) Create environment "af3" & install Mamba
# ---------------------------------------------------------
RUN conda create -n af3 python=3.11 -y
RUN conda run -n af3 conda install -n af3 -y -c conda-forge mamba

# ---------------------------------------------------------
# 4) Install core packages with Mamba
#    (BLAS, LAPACK, etc. for SciPy/NumPy builds)
# ---------------------------------------------------------
RUN conda run -n af3 mamba install -y \
    -c conda-forge -c bioconda -c omnia \
    openmm==8.0 \
    pdbfixer==1.9 \
    kalign2 \
    modelcif \
    pip \
    hmmer \
    hhsuite 
# ---------------------------------------------------------
# 5) Install pinned Python packages, using an updated NumPy
#    (instead of the broken pinned 'numpy==2.1.3').
# ---------------------------------------------------------
RUN conda run -n af3 pip install --upgrade pip && \
    conda run -n af3 pip install --no-cache-dir \
      absl-py==2.1.0 \
      chex==0.1.87 \
      dm-haiku==0.0.13 \
      dm-tree==0.1.8 \
      filelock==3.16.1 \
      jax-cuda12-pjrt==0.4.34 \
      "jax-cuda12-plugin[with-cuda]==0.4.34" \
      jax-triton==0.2.0 \
      jaxlib==0.4.34 \
      jaxtyping==0.2.34 \
      jmp==0.0.4 \
      ml-dtypes==0.5.0 \
      numpy==1.26.4 \
      pillow==11.0.0 \
      rdkit==2024.3.5 \
      scipy==1.14.1 \
      tabulate==0.9.0 \
      toolz==1.0.0 \
      tqdm==4.67.0 \
      triton==3.1.0 \
      typeguard==2.13.3 \
      typing-extensions==4.12.2 \
      zstandard==0.23.0 \
      h5py>=3.1.0 \
      matplotlib>=3.3.3 \
      ml-collections>=0.1.0 \
      pandas>=1.5.3 \
      tensorflow-cpu>=2.16.1 \
      importlib-resources>=6.1.0 \
      "importlib-metadata>=4.8.2,<5.0.0" \
      biopython>=1.82 \
      nbformat>=5.9.2 \
      py3Dmol==2.0.4 \
      pytest>=6.0 \
      ipython==8.16.1 \
      appdirs>=1.4.4 \
      jupyterlab>=3.0 \
      ipywidgets \
      immutabledict>=2.0.0

# ---------------------------------------------------------
# 6) Clone & Install AlphaPulldown
# ---------------------------------------------------------
RUN git clone --recurse-submodules https://github.com/KosinskiLab/AlphaPulldown.git
WORKDIR /AlphaPulldown
RUN conda run -n af3 pip install . --no-deps

# ---------------------------------------------------------
# 7) Copy & Build AlphaFold 3 Source
# ---------------------------------------------------------
COPY alphafold3/ /app/alphafold3
WORKDIR /app/alphafold3
RUN conda run -n af3 pip install --upgrade pip && \
    conda run -n af3 pip install --no-deps . && \
    conda run -n af3 build_data

# ---------------------------------------------------------
# 8) Environment variables for XLA
# ---------------------------------------------------------
ENV XLA_FLAGS="--xla_gpu_enable_triton_gemm=false"
ENV XLA_PYTHON_CLIENT_PREALLOCATE=true
ENV XLA_CLIENT_MEM_FRACTION=0.95

ENTRYPOINT ["bash"]

